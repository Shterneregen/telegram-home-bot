server.port=${SERVER_PORT:9988}

#============================================================
# Switchers
#============================================================
network-monitor.enabled=false
mock-bot.enabled=true

#============================================================
logging.level.random.telegramhomebot=info
logging.level.org.telegram=info

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=when_authorized

# Max file size.
spring.servlet.multipart.max-file-size=1MB
# Max Request Size
spring.servlet.multipart.max-request-size=1MB

#============================================================
# SSL config
#============================================================
#server.ssl.enabled=true
#server.ssl.key-store=classpath:thb-keystore.p12
#server.ssl.key-store-password=SOME_SECURE_PSW
#server.ssl.key-store-type=PKCS12
#server.ssl.key-alias=thb

#============================================================
# Telegram-bot config
#============================================================
telegram.api-url=https://api.telegram.org
telegram.bot-owner-id=${TELEGRAM_BOT_CHAT_ID}
telegram.token=${TELEGRAM_TOKEN}
telegram.bot-name=${TELEGRAM_BOT_NAME}

# comma separated list
telegram.home-group-user-ids=
buttons.in.row=3

#============================================================
# Network Monitor config
#============================================================
state.change.command=ip -j n show
state.change.scheduled.time=600000
ping.stored.hosts.scheduled.time=600000
broadcast.ping.command.linux=fping -A -d -a -q -g -a -i 1 -r 2 192.168.0.0/24 ; arp -a
broadcast.ping.command.windows=FOR /L %i in (1,1,255) do @ping -n 1 192.168.0.%i | find "Reply" && arp -a
broadcast.ping.scheduled.time=120000

#============================================================
# Lang config
#============================================================
# en,ru
default.language=en
internationalization.enabled=false

#============================================================
# Security config
#============================================================
bcrypt.rounds=11
default.admin.login=admin
# BCrypt string with bcrypt.rounds
default.admin.password=$2y$11$LH5u77OHqFSc6p2nmR9VM.E3FgeCM6QeAVii1GsEENEhOEjCpYdPu
default.user.login=user
# BCrypt string with bcrypt.rounds
default.user.password=$2y$11$LH5u77OHqFSc6p2nmR9VM.E3FgeCM6QeAVii1GsEENEhOEjCpYdPu
login.max.attempts.before.block=5
login.blocking.time.in.minutes=600

#============================================================
# H2 config
#============================================================
spring.h2.console.enabled=false
spring.h2.console.path=/console/
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=false
spring.datasource.url=jdbc:h2:${user.dir}/thb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
# Create/update tables structures by Entity classes
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#============================================================
# Hosts page config
#============================================================
hosts.default.page.size=20
hosts.default.sorting=state
hosts.default.sorting.direction=asc

#============================================================
# Wake On Lan config
#============================================================
wakeOnLan.port=9
wakeOnLan.broadcast.ip=192.168.31.255

#============================================================
# Open Weather config
#============================================================
openweather.enabled=false
openweather.base-url=https://api.openweathermap.org/data/2.5
openweather.appid=
